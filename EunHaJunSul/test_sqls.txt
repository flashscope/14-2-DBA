CREATE PROCEDURE SP_TEST1(IN num INT, INOUT ret INT)

SET @n = 10;
CALL SP_TEST1(2, @n);
SELECT @n;


DROP TABLE IF EXISTS SHIP;
CREATE TABLE SHIP(
	SID INT(11) PRIMARY KEY auto_increment,
	UID INT(11),
	GID TINYINT(4),
	ATK INT(11)
);

DROP TABLE IF EXISTS USER;
CREATE TABLE USER(
	UID INT(11) PRIMARY KEY NOT NULL,
	GID TINYINT(4)
);

DROP TABLE IF EXISTS GALAXY;
CREATE TABLE GALAXY(
	GID TINYINT(4) PRIMARY KEY NOT NULL,
	NAME VARCHAR(16),
	HP INT(11)
);

DROP TABLE IF EXISTS LOG;
CREATE TABLE LOG(
	LOGID INT(4) PRIMARY KEY NOT NULL,
	UID INT(11),
	LOG VARCHAR(64),
	LOG_TIME TIMESTAMP
);



DROP TABLE IF EXISTS DB;
CREATE TABLE DB(
	DBID TINYINT(4) PRIMARY KEY NOT NULL,
	DBNAME CHAR(3),
	IP CHAR(15)
);

INSERT INTO DB(DBID, DBNAME, IP) VALUES(1,"DB1","127.0.0.1");
INSERT INTO DB(DBID, DBNAME, IP) VALUES(2,"DB2","127.0.0.1");
INSERT INTO DB(DBID, DBNAME, IP) VALUES(3,"DB3","127.0.0.1");
INSERT INTO DB(DBID, DBNAME, IP) VALUES(4,"DB4","127.0.0.1");

DROP TABLE IF EXISTS USER2DB;
CREATE TABLE USER2DB(
	UID INT(11) PRIMARY KEY auto_increment,
	GID TINYINT(4),
	DBID TINYINT(4),
	foreign key (DBID) references DB(DBID)
);





DROP PROCEDURE SP_AddUser;
DELIMITER $$
CREATE PROCEDURE SP_AddUser(
		out ouid int,
		out ogid tinyint,
		out odbid tinyint
	)

	
	BEGIN
	START TRANSACTION;
		INSERT INTO USER2DB VALUES();
		SET ouid = SELECT LAST_INSERT_ID();
		SET ogid = ouid % 4 + 1;
		SET odbid = ogid % 2 + 1;
		UPDATE USER2DB set gid = ogid, dbid = odbid where uid = ouid;
		COMMIT;
	END $$
	

DELIMITER ;

SET @uid = 10;
SET @gid = 10;
SET @odbid = 10;
call SP_AddUser(@uid,@gid,@odbid);


// 완성인듯1
DROP PROCEDURE IF EXIST SP_AddShips;
DELIMITER $$
CREATE PROCEDURE SP_AddShips(
		in iuid int,
		in igid tinyint
	)

	BEGIN
		INSERT INTO USER(UID, GID) VALUES(iuid, igid);
		DECLARE i INT DEFAULT 0;
		WHILE i < 10 DO
			INSERT INTO SHIP(UID, GID, ATK) VALUES(iuid, igid, ROUND((RAND() * (100-5))+5) );
			SET i = i + 1;
		END WHILE;
	END $$
	
DELIMITER ;

call SP_AddShips(1,2);


DROP PROCEDURE SP_GET_USER_DATA;
DELIMITER $$
CREATE PROCEDURE SP_GET_USER_DATA(
		out ouid int,
		out ogid tinyint,
		out odbid tinyint
		)
	BEGIN
		SELECT UID,GID,DBID INTO ouid,ogid,odbid FROM USER2DB WHERE RAND()<=0.0006 limit 1;
	END $$

DELIMITER ;



DROP TABLE IF EXISTS GALAXY;
CREATE TABLE GALAXY(
	GID TINYINT(4) PRIMARY KEY NOT NULL,
	NAME VARCHAR(16),
	HP INT(11)
);

DROP PROCEDURE SP_ATTACK_GALAXY;
DELIMITER $$
CREATE PROCEDURE SP_ATTACK_GALAXY(
		in igid tinyint,
		in iatk int,
		out ohp int
		)
	BEGIN
	START TRANSACTION;
	UPDATE GALAXY set HP=HP-iatk where GID = igid;
	COMMIT;
	END $$


DELIMITER ;


